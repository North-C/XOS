make --dry-run --always-make --keep-going --print-directory
make: Entering directory '/root/project/OS'
echo Building Project
echo Target boot init build finished.
make -C boot all
echo -e "\t" CC -I/root/project/OS/include -c -fno-builtin -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2 boot.c -o boot.o
gcc -I/root/project/OS/include -c -fno-builtin -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2 boot.c -o /root/project/OS/build/boot.o
echo -e "\t" CC -I/root/project/OS/include -c -fno-builtin -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2 grub_head.S -o grub_head.o
gcc -I/root/project/OS/include -c -fno-builtin -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2 grub_head.S -o /root/project/OS/build/grub_head.o
echo Target boot init build finished.
make -C init all
echo -e "\t" CC -I/root/project/OS/include -c -fno-builtin -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2 main.c -o main.o
gcc -I/root/project/OS/include -c -fno-builtin -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2 main.c -o /root/project/OS/build/main.o
echo -e "\t" CC -I/root/project/OS/include -c -fno-builtin -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2   -o kernel
echo  ./build/grub_head.o ./build/boot.o   ./build/main.o
#nasm -f elf ./boot/grub_head.S -o ./build/grub_head.o
ld -m elf_i386 -T /root/project/OS/script/kernel.ld -Map /root/project/OS/build/kernel.map -nostdlib  ./build/grub_head.o ./build/boot.o   ./build/main.o -o build/kernel.bin
echo Target kernel build finished.
cp ./build/kernel.bin ./hdisk/boot/kernel.bin
sync
sleep 1
make: Leaving directory '/root/project/OS'
 
