make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.
 

# Make data base, printed on Mon May  9 02:46:30 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# default
.SHELLFLAGS := -c
# environment
VSCODE_AGENT_FOLDER = /root/.vscode-server
# makefile (from 'Makefile', line 17)
LD_FLAGS = -T scripts/kernel.ld -m elf_i386 -nostdlib -Map ${BUILD_DIR}/kernel.map
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.1
# makefile
CURDIR := /root/project/OS
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"zh-cn","availableLanguages":{}}
# environment
_ = /root/.vscode-server/bin/57fd6d0195bb9b9d1b49f6da5db789060795de47/node
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# 'override' directive
GNUMAKEFLAGS := 
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/0/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /root
# environment
SSH_CONNECTION = 192.168.138.1 57690 192.168.138.132 22
# environment
PATH = /root/.vscode-server/bin/57fd6d0195bb9b9d1b49f6da5db789060795de47/bin/remote-cli:/root/anaconda3/bin:/root/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from 'Makefile', line 13)
LD = ld
# environment
XDG_RUNTIME_DIR = /run/user/0
# environment
CONDA_PREFIX = /root/anaconda3
# environment
VSCODE_LOG_STACK = false
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 18)
ASM_FLAGS = -f elf -g -F stabs
# environment
LS_COLORS = 
# automatic
%F = $(notdir $%)
# environment
CONDA_EXE = /root/anaconda3/bin/conda
# makefile (from 'Makefile', line 10)
S_OBJECTS = $(patsubst %.s, %.o, $(S_SOURCES))
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /root/project/OS
# environment
VSCODE_IPC_HOOK_CLI = /run/user/0/vscode-ipc-54a195b8-da9c-48d0-8a19-a8780b445e04.sock
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /root
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
LOGNAME = root
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
CONDA_PROMPT_MODIFIER = (base) 
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'Makefile', line 9)
S_SOURCES = $(shell find . -name "*.s")
# makefile (from 'Makefile', line 3)
PROJECT_PATH := /root/project/OS
# environment
MAKELEVEL := 0
# environment
CONDA_DEFAULT_ENV = base
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 3
# makefile (from 'Makefile', line 14)
ASM = nasm
# makefile (from 'Makefile', line 12)
CC = gcc
# makefile (from 'Makefile', line 4)
BUILD_DIR = ${PROJECT_PATH}/build
# environment
XDG_SESSION_ID = 101
# environment
USER = root
# makefile
.DEFAULT_GOAL := all
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
CONDA_SHLVL = 1
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# environment
SSH_CLIENT = 192.168.138.1 57690 22
# environment
MAIL = /var/mail/root
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
BROWSER = /root/.vscode-server/bin/57fd6d0195bb9b9d1b49f6da5db789060795de47/bin/helpers/browser.sh
# environment
VSCODE_HANDLES_SIGPIPE = true
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
https_proxy = http://192.168.138.1:7890
# makefile (from 'Makefile', line 16)
C_FLAGS = -I ./include/ -c -fno-builtin -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2
# environment
LC_ALL = C
# environment
CONDA_PYTHON_EXE = /root/anaconda3/bin/python
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 7)
C_SOURCES = $(shell find . -name "*.c")
# default
SUFFIXES := 
# environment
_CE_M = 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 8)
C_OBJECTS = $(patsubst %.c, %.o, $(C_SOURCES))
# environment
http_proxy = http://192.168.138.1:7890
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
LANG = C
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# makefile (from 'Makefile', line 2)
mkfile_path := /root/project/OS/Makefile
# environment
_CE_CONDA = 
# variable set hash-table stats:
# Load=90/1024=9%, Rehash=0, Collisions=15/147=10%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# init (device 2049, inode 1451529): 2 files, no impossibilities so far.
# lib (device 2049, inode 1978494): 4 files, no impossibilities so far.
# kernel (device 2049, inode 1444574): 5 files, no impossibilities so far.
# . (device 2049, inode 1442764): 22 files, no impossibilities.
# boot (device 2049, inode 1451267): 6 files, no impossibilities.
# arch/i386/kernel (device 2049, inode 1976733): 5 files, no impossibilities so far.

# 44 files, no impossibilities in 6 directories.

# Implicit Rules

%.o: %.c
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

%.o: %.s
#  recipe to execute (from 'Makefile', line 27):
	@echo 编译汇编文件 $< ...
	$(ASM) $(ASM_FLAGS) $<

# 2 implicit rules, 0 (0.0%) terminal.

# Files

qemu:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 53):
	qemu-system-i386  -serial stdio -s -S -drive file=./hda.img,format=raw,index=0,media=disk -m 512

link:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := link
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/27=4%
#  recipe to execute (from 'Makefile', line 31):
	@echo 链接内核文件...
	$(LD) $(LD_FLAGS) $(S_OBJECTS) $(C_OBJECTS) -o ${BUILD_DIR}/kernel.bin

all: boot/grub_head.o boot/boot.o arch/i386/kernel/init_task.o arch/i386/kernel/setup.o kernel/panic.o kernel/printk.o init/main.o lib/vsprintf.o lib/string.o link update_image
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/19=0%

# Not a target:
boot/boot.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-09 00:19:38.861492742
#  File has been updated.
#  Successfully updated.

.PHONY: clean update_image mount_image umount_image qemu debug
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

arch/i386/kernel/setup.o: arch/i386/kernel/setup.c
#  Implicit rule search has been done.
 
#  Implicit/static pattern stem: 'arch/i386/kernel/setup'
#  Last modified 2022-05-09 00:54:36.017872059
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

# Not a target:
boot/grub_head.s:
#  Implicit rule search has been done.
#  Last modified 2022-05-09 00:56:06.033590803
#  File has been updated.
#  Successfully updated.

# Not a target:
lib/string.c:
#  Implicit rule search has been done.
#  Last modified 2022-04-29 07:32:47.854653703
#  File has been updated.
#  Successfully updated.

# Not a target:
lib/vsprintf.c:
#  Implicit rule search has been done.
#  Last modified 2022-04-28 02:50:33.403475586
#  File has been updated.
#  Successfully updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-09 02:36:37.507151385
#  File has been updated.
#  Successfully updated.

debug:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 63):
	gdb -x ./gdbinit

mount_image:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 45):
	mount -o loop ./hda.img ./hdisk/

update_image:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 40):
	cp kernel.bin ./hdisk/boot/
	sleep 1

kernel/panic.o: kernel/panic.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'kernel/panic'
#  Last modified 2022-05-09 00:54:36.025872031
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

init/main.o: init/main.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'init/main'
#  Last modified 2022-05-09 00:54:36.045871964
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

arch/i386/kernel/init_task.o: arch/i386/kernel/init_task.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'arch/i386/kernel/init_task'
#  Last modified 2022-05-09 00:54:36.009872084
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

kernel/printk.o: kernel/printk.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'kernel/printk'
#  Last modified 2022-05-09 00:54:36.033872006
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

# Not a target:
arch/i386/kernel/setup.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-09 00:26:27.165340118
#  File has been updated.
#  Successfully updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 36):
	$(RM) $(S_OBJECTS) $(C_OBJECTS) kernel.bin

# Not a target:
kernel/panic.c:
#  Implicit rule search has been done.
#  Last modified 2022-04-28 02:03:33.800711373
#  File has been updated.
#  Successfully updated.

umount_image:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 49):
	umount ./hdisk

boot/boot.o: boot/boot.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'boot/boot'
#  Last modified 2022-05-09 00:54:36.001872112
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

# Not a target:
init/main.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-09 00:47:20.132044395
#  File has been updated.
#  Successfully updated.

# Not a target:
arch/i386/kernel/init_task.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-09 00:26:20.933296271
#  File has been updated.
#  Successfully updated.

# Not a target:
kernel/printk.c:
#  Implicit rule search has been done.
#  Last modified 2022-05-09 00:48:50.059451471
#  File has been updated.
#  Successfully updated.

boot/grub_head.o: boot/grub_head.s
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'boot/grub_head'
#  Last modified 2022-05-09 01:14:41.629324298
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 27):
	@echo 编译汇编文件 $< ...
	$(ASM) $(ASM_FLAGS) $<

lib/string.o: lib/string.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'lib/string'
#  Last modified 2022-05-09 00:54:36.061871911
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

lib/vsprintf.o: lib/vsprintf.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'lib/vsprintf'
#  Last modified 2022-05-09 00:54:36.053871937
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'Makefile', line 23):
	@echo 编译代码文件 $< ...
	$(CC) $(C_FLAGS) $< -o $@
	

# files hash-table stats:
# Load=30/1024=3%, Rehash=0, Collisions=11/99=11%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 83 / storage = 916 B / avg = 11 B
# current buf: size = 8162 B / used = 916 B / count = 83 / avg = 11 B

# strcache performance: lookups = 136 / hit rate = 38%
# hash-table stats:
# Load=83/8192=1%, Rehash=0, Collisions=9/136=7%
# Finished Make data base on Mon May  9 02:46:30 2022

 
