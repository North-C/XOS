# make flag
MAKEFLAGS += --no-print-directory
MAKEFLAGS += -s
BUILD_DIR = ${PROJECT_PATH}/build

# compile macro
ASM :=as
CC := gcc-4.8
LD :=ld
LDFLAGS = -m32 -m elf_i386 -T ${PROJECT_PATH}/scripts/kernel.ld -Map ${PROJECT_PATH}/build/kernel.map -nostdlib
LIB = -I ${PROJECT_PATH}/include

# compile flags
CCFLAGS :=  $(LIB) -c -fno-builtin  \
                    -m32 -fno-stack-protector -nostdinc -fno-pic -gdwarf-2
OBJCCFLAGS := $(CCFLAGS)
ASFLAGS =  -f elf -g -F stabs

# recursive make and clean
.PHONY: build-subdirs
build-subdirs: $(DIRS)

.PHONY: $(DIRS)
$(DIRS):
	@echo Target $(DIRS) build finished.
	@$(MAKE) -C $@ all

# dependencies
%.o: %.c
	@echo -e "\t" CC $(CCFLAGS) $< -o $@
	@$(CC) $(CCFLAGS) $< -o ${BUILD_DIR}/$@

%.o: %.S
	@echo -e "\t" CC $(CCFLAGS) $< -o $@
	@$(CC) $(CCFLAGS) $< -o ${BUILD_DIR}/$@